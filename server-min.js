const{makeWASocket:makeWASocket,useMultiFileAuthState:useMultiFileAuthState,DisconnectReason:DisconnectReason}=require("@whiskeysockets/baileys"),{Boom:Boom}=require("@hapi/boom"),{createServer:createServer}=require("http"),log=require("pino"),express=require("express"),cors=require("cors"),bodyParser=require("body-parser"),urlToTemplateAndMedia=require("./templatesUrls.js"),{city:city}=require("./templates.js"),app=express(),server=createServer(app),port=process.env.PORT||8080;let sock,qrDinamic;app.use(cors()),app.use(bodyParser.json()),app.use(bodyParser.urlencoded({extended:!0}));let count=0;const reconnect=()=>{connectToWhatsApp()},connectToWhatsApp=async()=>{const{state:e,saveCreds:s}=await useMultiFileAuthState("session_auth_info");sock=makeWASocket({printQRInTerminal:!0,auth:e,logger:log({level:"silent"})}),sock.ev.on("connection.update",handleConnectionUpdate),sock.ev.on("messages.upsert",handleMessageUpsert),sock.ev.on("creds.update",s)},handleConnectionUpdate=e=>{const{connection:s,lastDisconnect:t,qr:o}=e;if(qrDinamic=o,"close"===s){switch(new Boom(t.error).output.statusCode){case DisconnectReason.badSession:sock.logout();break;case DisconnectReason.connectionClosed:case DisconnectReason.connectionLost:case DisconnectReason.restartRequired:case DisconnectReason.timedOut:connectToWhatsApp();break;case DisconnectReason.connectionReplaced:sock.logout();break;case DisconnectReason.loggedOut:sock.logout();break}}},handleMessageUpsert=async({messages:e,type:s})=>{try{if("notify"===s&&!e[0]?.key.fromMe){const s=e[0]?.message?.extendedTextMessage?.contextInfo?.externalAdReply?.sourceUrl||"",t=e?.[0]?.message?.extendedTextMessage?.text||"",o=e[0]?.key?.remoteJid;let n;for(const e of Object.keys(urlToTemplateAndMedia))if(t.includes(e)||s.includes(e)){n=urlToTemplateAndMedia[e];break}if(n){const e=n.media;await sock.sendMessage(o,{image:e,caption:n.template}),setTimeout((async()=>{await sock.sendMessage(o,{text:city})}),2e3)}}}catch(e){}};connectToWhatsApp().catch((e=>{})),server.listen(port,(()=>{}));